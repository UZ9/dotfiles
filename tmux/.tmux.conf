set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix 

# Tmux project management
bind-key f run-shell "tmux neww ~/.local/bin/scripts/tmux-project-manager.sh"
bind-key p run-shell "tmux neww ~/.local/bin/scripts/school-manager.sh"
bind-key n run-shell "tmux neww ~/.local/bin/scripts/note-manager.sh"

# Move status bar to top 
set-option -g status-position top

# Set tmux status bar 
# set -g status-right "#[fg=color181]#(date +"%I:%M%p %m-%d-%Y")#[default]"


# Bindings for switching between windows 
# Originally these were set to allow repeating, but requiring
# a non-navigation key (i.e. not hjkl) to be pressed before being 
# able to use a navigation key again proved to be tedious (e.g.
# repeating a command)
bind C-s last-window

# Snippet mostly from tmux.nvim
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$ '"
#
# bind-key -n 'M-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
# bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
# bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
#
# bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
# bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
# bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
# bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# bind -n M-l run-shell "tmux select-pane -R"
# bind -n M-k run-shell "tmux select-pane -U"
# bind -n M-j run-shell "tmux select-pane -D"
# bind -n M-h run-shell "tmux select-pane -L"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Easy tmux reloading 
bind r run-shell "tmux source ~/.tmux.conf"

# Vim keybindings in terminal
set-window-option -g mode-keys vi

# When splitting panes, keep in same directory 
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Fix terminal colors
set -g default-terminal "screen-256color" 
set-option -sa terminal-overrides ",xterm-256color:RGB"

set -g visual-bell off
set -g set-titles on

# Tmux plugin manager
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin "tmux-plugins/tmux-yank"

# Allow mouse to select panes 
set -g mouse on

# Fix tmux escape latency issue 
set -sg escape-time 0

###########################################
# TMUX COMMAND MODE 
###########################################

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

###########################################
# TMUX QUICK NAVIGATION BINDS
###########################################
bind 1 run-shell "~/.local/bin/scripts/tmux-project-manager.sh ~/.config/nvim"
bind 2 run-shell "~/.local/bin/scripts/tmux-project-manager-frequent.sh 2"
bind 3 run-shell "~/.local/bin/scripts/tmux-project-manager.sh ~/Code/canvas-fzf/"
bind 4 run-shell "~/.local/bin/scripts/tmux-project-manager.sh ~/.config/nvim"
bind 5 run-shell "~/.local/bin/scripts/tmux-project-manager.sh ~/.config/nvim"
bind 6 run-shell "~/.local/bin/scripts/tmux-project-manager.sh ~/.config/nvim"



###########################################
# THEME CONFIGURATION
###########################################

# ## COLORSCHEME: everforest dark medium
set-option -g status "on"
# set -g status-interval 2
#
set-option -g status-fg 'color249' # fg
set-option -g status-bg 'color235' # bg0
#
set-option -g mode-style fg='color175',bg='color238' # fg=purple, bg=bg_visual
#
# # default statusbar colors
set-option -g status-style fg='color181',bg='color235',default # fg=fg bg=bg_dim


run '~/.tmux/plugins/tpm/tpm'
